{"version":3,"sources":["./src/app/provider-information/provider-information.component.ts","./src/app/provider-information/provider-information.component.html","./src/app/reviews-ratings/reviews-ratings.component.ts","./src/app/reviews-ratings/reviews-ratings.component.html","./src/app/nav-bar/nav-bar.component.ts","./src/app/nav-bar/nav-bar.component.html","./src/app/first-aids/first-aids.component.ts","./src/app/first-aids/first-aids.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/location-based-information/location-based-information.component.ts","./src/app/location-based-information/location-based-information.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nexport interface Provider {\r\n  id:number;\r\n  address: string;\r\n  contact: string\r\n  other:string\r\n  hospital:string\r\n}\r\n\r\n@Component({\r\n  selector: 'app-provider-information',\r\n  templateUrl: './provider-information.component.html',\r\n  styleUrls: ['./provider-information.component.css']\r\n})\r\nexport class ProviderInformationComponent implements OnInit {\r\n\r\n  provider: any[] = [];\r\n  searchKeyword: string = '';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    this.http.get<any[]>('http://safetytraveller-env.eba-mzsacnda.us-east-1.elasticbeanstalk.com/getAllProviders').subscribe(\r\n      (response) => {\r\n        this.provider = response;\r\n      },\r\n      (error) => {\r\n        console.error('Error fetching table data:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  search() {\r\n    if (this.searchKeyword) {\r\n      this.provider = this.provider.filter((data) => {\r\n        // Convert both the keyword and data values to lowercase for case-insensitive comparison\r\n        const keyword = this.searchKeyword.toLowerCase();\r\n        const hospital = data.hospital.toLowerCase();\r\n        const address = data.address.toLowerCase();\r\n        const contact = data.contact.toLowerCase();\r\n        const other = data.other.toLowerCase();\r\n  \r\n        // Check if the keyword is present in any of the data values\r\n        return (\r\n          hospital.includes(keyword) ||\r\n          address.includes(keyword) ||\r\n          contact.includes(keyword) ||\r\n          other.includes(keyword)\r\n        );\r\n      });\r\n    } else {\r\n      // If no keyword entered, load all data\r\n      this.provider = this.provider;\r\n    }\r\n  }\r\n  \r\n\r\n}\r\n","<div>\r\n    <div class=\"mx-auto col-10 col-md-8 col-lg-6 shadow-lg p-3 mb-5 bg-body rounded\" style=\"margin-top:20px\">\r\n\t\t\t<form class=\"row g-3\">\r\n\t\t\t\t  <div>\r\n\t\t\t\t    <label for=\"inputCity\" class=\"form-label\">Search by Keyword</label>\r\n\t\t\t\t    <input type=\"text\" class=\"form-control\" id=\"inputCity\" name =\"keyword\" [(ngModel)]=\"searchKeyword\" (keyup)=\"search()\">\r\n\t\t\t\t  </div>\r\n\t\t\t</form>\r\n\t</div>\r\n  \t<div style=\"padding: 20px\">\r\n\t\t<table class=\"table\">\r\n\t\t  <thead>\r\n\t\t    <tr>\r\n\t\t      <!-- <th scope=\"col\">#</th> -->\r\n\t\t      <th scope=\"col\">Hospital</th>\r\n\t\t      <th scope=\"col\">Address</th>\r\n\t\t      <th scope=\"col\">Contact</th>\r\n\t\t      <th scope=\"col\">Other Details</th>\r\n\t\t    </tr>\r\n\t\t  </thead>\r\n\t\t  <tbody>\r\n\t\t\t<tr *ngFor=\"let data of provider\">\r\n\t\t\t  <td>{{ data.hospital }}</td>\r\n\t\t\t  <td>{{ data.address }}</td>\r\n\t\t\t  <td>{{ data.contact }}</td>\r\n\t\t\t  <td>{{ data.other }}</td>\r\n\t\t\t</tr>\r\n\t\t  </tbody>\r\n\t\t</table>\r\n  \t</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nexport interface Review {\r\n  reviewerName: string;\r\n  review: string\r\n  rating:string\r\n  hospital:string\r\n  location:string\r\n}\r\n\r\n@Component({\r\n  selector: 'app-reviews-ratings',\r\n  templateUrl: './reviews-ratings.component.html',\r\n  styleUrls: ['./reviews-ratings.component.css']\r\n})\r\nexport class ReviewsRatingsComponent implements OnInit {\r\n\r\n  reviews: Review[];\r\n  searchHospital:string\r\n  searchLocation:string\r\n  filteredReviews: Review[]= [];\r\n  review: string\r\n  rating:string\r\n  hospital:string\r\n  location:string\r\n  reviewerName: string;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    {\r\n      this.http.get<Review[]>('http://safetytraveller-env.eba-mzsacnda.us-east-1.elasticbeanstalk.com/getAllReviews').subscribe(\r\n        (response) => {\r\n          this.reviews = response;\r\n        },\r\n        (error) => {\r\n          console.error('Error fetching Reviews:', error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  search() {\r\n    //Filter the data based on the selected hospital and location\r\n    const filteredData = this.reviews.filter((review) => {\r\n      const searchHospitalLowerCase = this.searchHospital?.toLowerCase().trim();\r\n      const searchLocationLowerCase = this.searchLocation?.toLowerCase().trim();\r\n      const reviewHospitalLowerCase = review.hospital.toLowerCase().replace(/\\s/g, '');\r\n      const reviewLocationLowerCase = review.location.toLowerCase().replace(/\\s/g, '');\r\n    \r\n      if (searchHospitalLowerCase && searchLocationLowerCase) {\r\n        return (\r\n          reviewHospitalLowerCase.includes(searchHospitalLowerCase) &&\r\n          reviewLocationLowerCase.includes(searchLocationLowerCase)\r\n        );\r\n      } else if (searchHospitalLowerCase) {\r\n        return reviewHospitalLowerCase.includes(searchHospitalLowerCase);\r\n      } else if (searchLocationLowerCase) {\r\n        return reviewLocationLowerCase.includes(searchLocationLowerCase);\r\n      } else {\r\n        return true;\r\n      }\r\n    });\r\n    \r\n  \r\n    this.filteredReviews = filteredData;\r\n  }\r\n\r\n  addReview() {\r\n    // Check if the required fields are filled\r\n    if (this.location && this.hospital && this.rating) {\r\n  \r\n      // Create a new review object with the form values and the auto-incremented ID\r\n      const newReview: Review = {\r\n        location: this.location,\r\n        hospital: this.hospital,\r\n        review: this.review,\r\n        rating: this.rating,\r\n        reviewerName: this.reviewerName\r\n      };\r\n  \r\n      // Make a POST request to the backend API to add the new review\r\n      this.http.post('http://safetytraveller-env.eba-mzsacnda.us-east-1.elasticbeanstalk.com/addReview', newReview)\r\n        .subscribe(\r\n          (response) => {\r\n            console.log('Review added successfully:', response);\r\n            // Clear the form fields\r\n            this.location = '';\r\n            this.hospital = '';\r\n            this.review = '';\r\n            this.rating = '';\r\n            this.reviewerName ='';\r\n          },\r\n          (error) => {\r\n            console.error('Error adding review:', error);\r\n          }\r\n        );\r\n    } else {\r\n      console.log('Please fill in all required fields.');\r\n    }\r\n  }\r\n  \r\n\r\n}\r\n","<div>\r\n  \t<div>\r\n\t\t<div class=\"col shadow-lg p-3 mb-5 bg-body rounded\" style=\"margin: 12px\">\r\n\t\t\t<h2>Add Reviews</h2>\r\n\t\t\t<form class=\"row g-3\">\r\n\t\t\t\t<div class=\"col-md-6\">\r\n\t\t\t\t  <label for=\"inputLocation\" class=\"form-label\">Location</label>\r\n\t\t\t\t  <input type=\"text\" class=\"form-control\" id=\"inputLocation_forReview\" name=\"location\" [(ngModel)]=\"location\">\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-md-6\">\r\n\t\t\t\t  <label for=\"inputHospital\" class=\"form-label\">Hospital</label>\r\n\t\t\t\t  <input type=\"text\" class=\"form-control\" id=\"inputHospital4\" name=\"hospital\" [(ngModel)]=\"hospital\">\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-11\">\r\n\t\t\t\t  <label for=\"inputReview\" class=\"form-label\">Review</label>\r\n\t\t\t\t  <textarea class=\"form-control\" id=\"inputReview\" name=\"review\" [(ngModel)]=\"review\"></textarea>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-md-6\">\r\n\t\t\t\t  <label for=\"reviewerName\" class=\"form-label\">Reviewer Name</label>\r\n\t\t\t\t  <input type=\"text\" class=\"form-control\" id=\"reviewerName\" name=\"reviewerName\" [(ngModel)]=\"reviewerName\">\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-5\">\r\n\t\t\t\t  <label for=\"inputRating\" class=\"form-label\">Rating</label>\r\n\t\t\t\t  <input type=\"text\" class=\"form-control\" id=\"inputRating\" name=\"rating\" [(ngModel)]=\"rating\">\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t  <button type=\"submit\" class=\"btn btn-success\" (click)=\"addReview()\">Save</button>\r\n\t\t\t\t</div>\r\n\t\t\t  </form>\t\t\t\t\t\t\r\n\t\t</div>\r\n\r\n\t\t\r\n  \t\t<div class=\"row\" style=\"margin: 12px\">\r\n\r\n\t\t\t<div class=\"row\" style=\"padding-top: 16px \">\r\n\t\t\t\t<div class=\"mx-auto col-10 col-md-8 col-lg-6 shadow-lg p-3 mb-5 bg-body rounded\"></div>\r\n\t\t\t</div>\r\n\t\r\n\t\t\t<div class=\"col shadow-lg p-3 mb-5 bg-body rounded\" style=\"margin: 12px\">\r\n\t\t\t\t<h2>View Reviews</h2>\r\n\t\t\t\t<form class=\"row g-3\" (submit)=\"search()\">\r\n\t\t\t\t\t<div class=\"col-md-6\">\r\n\t\t\t\t\t  <label for=\"inputCity\" class=\"form-label\">Location</label>\r\n\t\t\t\t\t  <input type=\"text\" class=\"form-control\" name=\"location\" id=\"inputCity\" [(ngModel)]=\"searchLocation\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-6\">\r\n\t\t\t\t\t  <label for=\"inputState\" class=\"form-label\">Hospital/Pharmacy</label>\r\n\t\t\t\t\t  <input type=\"text\" class=\"form-control\" name=\"hospital\" id=\"inputHospital\" [(ngModel)]=\"searchHospital\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-12\" style=\"align-self: center;\">\r\n\t\t\t\t\t  <button type=\"submit\" class=\"btn btn-primary\">Search</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t  </form>\r\n\t\t\t\t  <table class=\"table\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t  <tr>\r\n\t\t\t\t\t\t<th scope=\"col\">Hospital</th>\r\n\t\t\t\t\t\t<th scope=\"col\">Review</th>\r\n\t\t\t\t\t  </tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t<tr *ngFor=\"let review of filteredReviews ? filteredReviews : reviews\">\r\n\t\t\t\t\t\t  <td>{{ review.hospital }} - {{ review.location }}</td>\r\n\t\t\t\t\t\t  <td>{{ review.review }} - {{ review.rating }}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t  </tbody>\r\n\t\t\t\t  </table>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \t</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <div class=\"container-fluid\">\n      <!-- <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button> -->\n      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" aria-current=\"page\" href=\"/home\">Home</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"/directory\">Directory</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"/location-based-search\">Near-By</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"/reviews\">Reviews</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"/first-aid\">First-Aid</a>\n          </li>\n          <!-- <li class=\"nav-item dropdown\">\n            <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n              Dropdown\n            </a>\n            <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n              <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\n              <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\n              <li><hr class=\"dropdown-divider\"></li>\n              <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>\n            </ul>\n          </li> -->\n          <!-- <li class=\"nav-item\">\n            <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\n          </li> -->\n        </ul>\n       <!--  <form class=\"d-flex\">\n          <input class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n          <button class=\"btn btn-outline-success\" type=\"submit\">Search</button>\n        </form> -->\n      </div>\n    </div>\n  </nav>","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nexport interface FirstAidData {\r\n  id:Number\r\n  emergency: string;\r\n  firstAid: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-first-aids',\r\n  templateUrl: './first-aids.component.html',\r\n  styleUrls: ['./first-aids.component.css']\r\n})\r\n\r\nexport class FirstAidsComponent implements OnInit {\r\n\r\n  firstAidData: FirstAidData[];\r\n  filteredData: FirstAidData[]= [];\r\n  searchKeyword: string;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  ngOnInit() {\r\n    this.http.get<FirstAidData[]>('http://safetytraveller-env.eba-mzsacnda.us-east-1.elasticbeanstalk.com/getAllFirstAid').subscribe(\r\n      (response) => {\r\n        this.firstAidData = response;\r\n      },\r\n      (error) => {\r\n        console.error('Error fetching firstAidData:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  search() {\r\n    if (this.searchKeyword) {\r\n      this.filteredData = this.firstAidData.filter((item) =>\r\n        item.emergency.toLowerCase().includes(this.searchKeyword.toLowerCase())\r\n      );\r\n    } else {\r\n      this.filteredData = this.firstAidData;\r\n    }\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"mx-auto col-10 col-md-8 col-lg-6 shadow-lg p-3 mb-5 bg-body rounded\" style=\"margin-top:20px\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6 offset-md-3\">\r\n          <div class=\"input-group mb-3\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Search by keywords\" aria-label=\"Search by keywords\" aria-describedby=\"button-addon2\" [(ngModel)]=\"searchKeyword\">\r\n            <button class=\"btn btn-outline-primary\" type=\"button\" id=\"button-addon2\" (click)=\"search()\">Search</button>\r\n          </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\" style=\"margin-top: 50px;\"></div> \r\n    <div class=\"row\">\r\n        <div class=\"col-md-6 mb-5\" *ngFor=\"let item of (filteredData.length ? filteredData : firstAidData)\">\r\n              <div class=\"card h-100\">\r\n                <div class=\"card-body\">\r\n                  <h5 class=\"card-title\">{{ item.emergency }}</h5>\r\n                  <p class=\"card-text\">{{ item.firstAid }}</p>\r\n                </div>\r\n              </div>\r\n        </div>    \r\n    </div>\r\n</div>\r\n    ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'final11app';\n}\n","<div>\n  <!-- <div style=\"text-align: center\"> -->\n    <!-- <h1>Welcome to {{title}} ! </h1> -->\n    <!-- <app-location-based-information></app-location-based-information> -->\n    <!-- <app-reviews-ratings></app-reviews-ratings> -->\n    <!-- <app-provider-information></app-provider-information> -->\n    <app-nav-bar></app-nav-bar>\n    <!-- <app-reviews-ratings></app-reviews-ratings> -->\n  </div>\n  \n  <router-outlet></router-outlet>\n  ","import { Component, OnInit } from '@angular/core';\nimport { ElementRef, NgZone, ViewChild } from '@angular/core';\nimport { MapsAPILoader } from '@agm/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-location-based-information',\n  templateUrl: './location-based-information.component.html',\n  styleUrls: ['./location-based-information.component.css']\n})\nexport class LocationBasedInformationComponent implements OnInit {\n\n  title: string = 'AGM project';\n  latitude: number;\n  longitude: number;\n  zoom: number;\n  address: string;\n  private geoCoder;\n  private placesService: google.maps.places.PlacesService;\n  private res;\n  hospitals: google.maps.places.PlaceResult[];\n  \n  @ViewChild('search')\n  public searchElementRef: ElementRef;\n  \n  constructor(\n    private mapsAPILoader: MapsAPILoader,\n    private ngZone: NgZone,\n  ) { }\n\n  ngOnInit(): void {\n    this.mapsAPILoader.load().then(() => {\n      this.setCurrentLocation();\n      this.geoCoder = new google.maps.Geocoder;\n\n      const options = {\n        fields: [\"formatted_address\", \"geometry\", \"name\"],\n        strictBounds: false,\n        types: [\"hospital\", \"health\"],\n      };\n  \n      let autocomplete = new google.maps.places.Autocomplete(this.searchElementRef.nativeElement);\n      autocomplete.addListener(\"place_changed\", () => {\n        this.ngZone.run(() => {\n          let place: google.maps.places.PlaceResult = autocomplete.getPlace();\n  \n          if (place.geometry === undefined || place.geometry === null) {\n            return;\n          }\n  \n          this.latitude = place.geometry.location.lat();\n          this.longitude = place.geometry.location.lng();\n          this.zoom = 12;\n          this.getNearbyHospitals(this.latitude, this.longitude).subscribe((results) => {\n            this.hospitals = results;\n            console.log(this.hospitals)\n            this.hospitals.forEach(element => {\n              console.log(element.geometry.location.lat())\n              console.log(element.geometry.location.lng())\n            });\n          })\n        });\n      });\n    });\n  }\n\n  private setCurrentLocation() {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        this.latitude = position.coords.latitude;\n        this.longitude = position.coords.longitude;\n        this.zoom = 8;\n        this.getAddress(this.latitude, this.longitude);\n      });\n    }\n  }\n  \n  getAddress(latitude, longitude) {\n    this.geoCoder.geocode({ 'location': { lat: latitude, lng: longitude } }, (results, status) => {\n      if (status === 'OK') {\n        if (results[0]) {\n          this.zoom = 12;\n          this.address = results[0].formatted_address;\n        } else {\n          window.alert('No results found');\n        }\n      } else {\n        window.alert('Geocoder failed due to: ' + status);\n      }\n  \n    });\n  }\n\n  getNearbyHospitals(latitude: number, longitude: number): Observable<google.maps.places.PlaceResult[]> {\n    const location = new google.maps.LatLng(latitude, longitude);\n    const request: google.maps.places.PlaceSearchRequest = {\n      location: location,\n      radius: 5000, // Search within a 5000 meter radius\n      keyword: 'hospital' // Search for hospitals\n    };\n\n    return new Observable((observer) => {\n      let placesService = new google.maps.places.PlacesService(document.createElement('div'))\n      placesService.nearbySearch(request, (results, status) => {\n        if (status === google.maps.places.PlacesServiceStatus.OK) {\n          observer.next(results);\n          observer.complete();\n        } else {\n          observer.error(status);\n        }\n      });\n    });\n  }\n\n}\n","<div>\n\t<div>\n\t\t<div class=\"row\" style=\"padding:16px\">\n\t        <div>\n\t\t\t\t<!-- <div class=\"mx-auto col-lg-4 shadow-lg p-3 mb-5 bg-body rounded\"> -->\n\t\t\t\t\t<div style=\"padding:6px\" class=\"form-group col-lg-4\">\n\t\t\t  \t\t\t<label>Location</label>\n\t\t\t  \t\t\t<input type=\"text\" class=\"form-control\" (keydown.enter)=\"$event.preventDefault()\" placeholder=\"Search Nearest Location\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"off\" type=\"text\" #search>\n\t\t\t\t\t</div>\n\t\t\t\t<!-- </div> -->\n\t\t  \t</div>\n\t\t\t  <div class=\" mx-auto  col-lg-12\" id=\"map\" >\n                <agm-map [latitude]=\"latitude\" [longitude]=\"longitude\" [zoom]=\"zoom\">\n\t\t\t\t\t  \t<agm-marker *ngFor=\"let hospital of hospitals\" \n\t\t\t\t\t  \t\t[latitude]=\"hospital.geometry.location.lat()\" \n\t\t\t\t\t  \t\t[longitude]=\"hospital.geometry.location.lng()\"\n\t\t\t\t\t\t\t[label]=\"hospital.name\">\n\t\t\t\t\t\t</agm-marker>\n                  </agm-map>\n\t\t\t</div>\n\t\t</div>\n        <div class=\"row\">\n            <!-- <div class=\" mx-auto  col-lg-10\" id=\"map\" >\n                <agm-map [latitude]=\"latitude\" [longitude]=\"longitude\" [zoom]=\"zoom\">\n\t\t\t\t\t  \t<agm-marker *ngFor=\"let hospital of hospitals\" \n\t\t\t\t\t  \t\t[latitude]=\"hospital.geometry.location.lat()\" \n\t\t\t\t\t  \t\t[longitude]=\"hospital.geometry.location.lng()\"\n\t\t\t\t\t\t\t[label]=\"hospital.name\">\n\t\t\t\t\t\t</agm-marker>\n                  </agm-map>\n\t\t\t</div> -->\n        </div>\n\t</div>\n</div>\n\n\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule} from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ReviewsRatingsComponent } from './reviews-ratings/reviews-ratings.component';\r\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\r\nimport { LocationBasedInformationComponent } from './location-based-information/location-based-information.component';\r\nimport { FirstAidsComponent } from './first-aids/first-aids.component';\r\nimport { ProviderInformationComponent } from './provider-information/provider-information.component';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nimport { AgmCoreModule } from '@agm/core';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ReviewsRatingsComponent,\r\n    NavBarComponent,\r\n    LocationBasedInformationComponent,\r\n    FirstAidsComponent,\r\n    ProviderInformationComponent,\r\n    HomeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'AIzaSyDNaMwBCibWm1L7IwrST_mx1kLTR81l8gE',\r\n      libraries: ['places']\r\n    })\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ReviewsRatingsComponent } from './reviews-ratings/reviews-ratings.component';\nimport { LocationBasedInformationComponent } from './location-based-information/location-based-information.component';\nimport { FirstAidsComponent } from './first-aids/first-aids.component';\nimport { ProviderInformationComponent } from './provider-information/provider-information.component';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n    {path: 'directory', component: ProviderInformationComponent},\n    {path: 'reviews', component: ReviewsRatingsComponent},\n    {path: 'location-based-search', component: LocationBasedInformationComponent},\n    {path: 'first-aid', component: FirstAidsComponent },\n    {path: 'home', component: HomeComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}